import { CaseInsensitiveMap, DependencyDetails } from '../../model';
export declare class AssetsUtils {
    /**
     * Get array of all the root dependencies of the project.
     * @returns array of the ids' of all root dependencies
     */
    static getDirectDependencies(assets: any): string[];
    /**
     * Get map of all the dependencies of the project.
     * @param assets - object representing the assets json file
     * @returns map of lower cased dependencies IDs and their actual details.
     */
    static getAllDependencies(assets: any): CaseInsensitiveMap<DependencyDetails>;
    /**
     * Get map of the dependencies relations map.
     * @returns dependencies ids' and an array of their dependencies ids'
     */
    static getChildrenMap(assets: any): CaseInsensitiveMap<string[]>;
    /**
     * Parses a dependency for it's id and version.
     * @param dependency.
     * @returns id and version as array.
     */
    static getDependencyIdAndVersion(dependency: string): string[];
    /**
     * If the package is included in the targets section of the assets.json file,
     * then this is a .NET dependency that shouldn't be included in the dependencies list (it come with the SDK).
     * Those files are located in the NuGetFallbackFolder directory.
     * @param assets - assets json object.
     * @param nugetPackageName - name of the package.
     * @returns true if part of targets.
     */
    static isPackagePartOfTargetDependencies(assets: any, nugetPackageName: string): boolean;
    /**
     * Get the nuget package file of a dependency.
     * @param library - library object of a dependency in assets json.
     * @param libraryPath.
     * @returns file name.
     */
    static getNupkgFileName(library: any, libraryPath: string): string;
}
