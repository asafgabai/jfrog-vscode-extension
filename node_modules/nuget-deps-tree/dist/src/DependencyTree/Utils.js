"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DependenciesUtils = exports.absentNupkgWarnMsg = void 0;
const loglevel_1 = __importDefault(require("loglevel"));
const Tree_1 = require("./Tree");
exports.absentNupkgWarnMsg = ' Skipping adding this dependency to the dependency tree. This might be because the package already exists in a different NuGet cache,' +
    " possibly the SDK's NuGetFallbackFolder cache. Removing the package from this cache may resolve the issue.";
class DependenciesUtils {
    /**
     * Creates dependency tree using the data received from the extractors.
     * @param extractor
     * @returns project's dependency tree
     */
    static createDependencyTree(extractor) {
        const rootTree = [];
        const rootDependencies = extractor.directDependencies();
        const allDependencies = extractor.allDependencies();
        const childrenMap = extractor.childrenMap();
        for (const rootId of rootDependencies) {
            const dependency = allDependencies.get(rootId);
            if (dependency) {
                rootTree.push(new Tree_1.DependencyTree(dependency._id, dependency._version, allDependencies, childrenMap));
            }
            else {
                loglevel_1.default.warn('unexpected dependency found in root dependencies array: %s', rootId);
            }
        }
        return rootTree;
    }
}
exports.DependenciesUtils = DependenciesUtils;
//# sourceMappingURL=Utils.js.map