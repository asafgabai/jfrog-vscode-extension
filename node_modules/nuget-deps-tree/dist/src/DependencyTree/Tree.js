"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DependencyTree = void 0;
const loglevel_1 = __importDefault(require("loglevel"));
class DependencyTree {
    constructor(_id, _version, allDependencies, childrenMap) {
        this._id = _id;
        this._version = _version;
        this._dependencies = [];
        this.addChildren(allDependencies, childrenMap);
    }
    get id() {
        return this._id;
    }
    set id(value) {
        this._id = value;
    }
    get version() {
        return this._version;
    }
    set version(value) {
        this._version = value;
    }
    get dependencies() {
        return this._dependencies;
    }
    set dependencies(value) {
        this._dependencies = value;
    }
    // Remove underscore when converting to JSON.
    toJSON() {
        return {
            id: this._id,
            version: this._version,
            dependencies: this._dependencies,
        };
    }
    /**
     * Recursively add children nodes for a dependency.
     * @param allDependencies - All dependencies, direct and transitive.
     * @param children - All dependencies pointing to their children.
     */
    addChildren(allDependencies, children) {
        var _a;
        const childArray = children.get(this._id);
        if (!childArray) {
            return;
        }
        for (const childId of childArray) {
            const dependency = allDependencies.get(childId);
            if (dependency) {
                const childTree = new DependencyTree(dependency._id, dependency._version, allDependencies, children);
                (_a = this._dependencies) === null || _a === void 0 ? void 0 : _a.push(childTree);
            }
            else {
                loglevel_1.default.warn('unexpected dependency found in children array: %s', childId);
            }
        }
    }
}
exports.DependencyTree = DependencyTree;
//# sourceMappingURL=Tree.js.map