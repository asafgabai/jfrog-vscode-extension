import { Extractor } from '../../model';
import { DependencyTree } from '../DependencyTree/Tree';
export declare class ProjectBuilder {
    private _name;
    private _rootPath;
    private _dependenciesSource;
    private _extractor;
    constructor(_name: string, _rootPath: string, _dependenciesSource: string, _extractor: Extractor);
    get name(): string;
    set name(value: string);
    get rootPath(): string;
    set rootPath(value: string);
    get dependenciesSource(): string;
    set dependenciesSource(value: string);
    get extractor(): Extractor;
    set extractor(value: Extractor);
    /**
     * Creates a project builder with an extractor.
     * @param name - project name.
     * @param rootPath - path to project.
     * @param dependenciesSource - project's dependencies source.
     */
    static load(name: string, rootPath: string, dependenciesSource: string): ProjectBuilder;
    /**
     * Creates a dependency tree for project, using it's extractor.
     * @returns project's dependency tree.
     */
    createDependencyTree(): DependencyTree[];
    /**
     * Create a dependency tree extractor, matching to the project's dependencies source.
     * @param projectName
     * @param dependenciesSource
     * @returns extractor for the project
     */
    static getCompatibleExtractor(projectName: string, dependenciesSource: string): Extractor;
}
